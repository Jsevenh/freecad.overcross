# syntax=docker/dockerfile:1.4
ARG ROS_DISTRO_ARG=jazzy
ARG ROS_DISTRO_ASSEMBLY_ARG=desktop
FROM osrf/ros:${ROS_DISTRO_ARG}-${ROS_DISTRO_ASSEMBLY_ARG}

# Must redeclare so that value is available after FROM statement.
ARG ROS_DISTRO_ARG

ARG USER=$USER
ARG UID=$(id -u)
ARG GROUP=$USER
ARG GID=$(id -g)
ARG PASSWD=ubuntu
ARG CONT_PATH_WS=/home/$USER/ros2/ros2_ws_with_freecad
ARG GZ_VERSION_ARG=harmonic

ENV GZ_VERSION=$GZ_VERSION_ARG
ENV PATH_TO_WS=$CONT_PATH_WS

ENV USER=$USER
ENV UID=$UID
ENV GROUP=$GROUP
ENV GID=$GID
ENV PASSWD=$PASSWD

# fix - error: externally-managed-environment
ENV PIP_BREAK_SYSTEM_PACKAGES 1


#bash needed for ros distro setup.bash builtin (command in script)
SHELL ["/bin/bash", "-c"]


# update gpg keys because can be expired (01.06.2025)
RUN echo 'Update gpg keys...'
RUN sudo apt-key del F42ED6FBAB17C654
RUN sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros2-latest-archive-keyring.gpg


### Install system packages
RUN echo 'Install system packages'
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
        software-properties-common \
        mesa-utils \
        mesa-vulkan-drivers \
        nano \
        pip \
        wget && \
    pip install debugpy && \
    apt-get autoclean && \
    apt-get autoremove && \
    rm -rf /var/lib/apt/lists/*
### End Install system packages


# ### Install FreeCAD Stable (0.21.2 - at time of commit)
# RUN echo 'Install FreeCAD'
# RUN add-apt-repository ppa:freecad-maintainers/freecad-stable && \
#     apt-get update && \
#     DEBIAN_FRONTEND=noninteractive apt-get install -y \
#         freecad && \
#     apt-get autoclean -y && \
#     apt-get autoremove -y && \
#     rm -rf /var/lib/apt/lists/*
# ### End Install FreeCAD


# Does not work yet
# ### Install FreeCAD 1.0 from downloaded deb package
# RUN echo 'Install FreeCAD 1.0 from downloaded deb package'
# RUN wget http://ftp.de.debian.org/debian/pool/main/f/freecad/freecad_1.0.0+dfsg-5_all.deb && \
#     # add-apt-repository ppa:freecad-maintainers/freecad-stable && \
#     # add-apt-repository ppa:freecad-maintainers/freecad-daily && \
#     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 6ED0E7B82643E131 && \
#     echo "deb http://ftp.de.debian.org/debian sid main" >> /etc/apt/sources.list && \
#     apt-get update && \
#     DEBIAN_FRONTEND=noninteractive apt-get install -y \
#         # freecad-daily \
#         freecad-python3 \
#         # occt-misc=7.6.3+dfsg1-7.1build1 \
#         # freecad-python3 \
#         ./freecad_1.0.0+dfsg-5_all.deb && \
#     rm -f ./freecad_1.0.0+dfsg-5_all.deb \
#     apt-get autoclean -y && \
#     apt-get autoremove -y && \
#     rm -rf /var/lib/apt/lists/*
# ### End Install FreeCAD 1.0 from downloaded deb package


### Delete user if present with same UID as local
RUN deluser --remove-home $(id -un $UID); exit 0
### End delete user if present with same UID as local


### Create user
RUN echo "* enable custom user: $USER"
RUN groupadd -g 110 render
RUN getent group $GROUP || groupadd --force -g $GID $GROUP
RUN useradd --create-home --shell /bin/bash --groups adm,sudo,video,render --uid $UID --gid $GID $USER
# RUN sed -i "s/%admin ALL=(ALL) ALL/%admin ALL=(ALL) NOPASSWD:ALL/g" /etc/sudoers ## make admin group no ask pass
RUN echo "$USER  ALL=(ALL:ALL) NOPASSWD:ALL" >> /etc/sudoers
ENV HOME=/home/$USER
RUN echo "$USER:$PASSWD" | /usr/sbin/chpasswd 2> /dev/null || echo ""
RUN if [[ -d "/dev/snd" ]] ; then chgrp -R adm /dev/snd ; fi
RUN export UBUNTU_USER_ID=$UID \
    && mkdir -p -m 0700 /run/user/"${UBUNTU_USER_ID}" \
    && chown $USER:$GROUP /run/user/"${UBUNTU_USER_ID}" \
    && echo "export XDG_RUNTIME_DIR=/run/user/${UBUNTU_USER_ID}" >> ${HOME}/.profile
### End create user


### Change owner of pip and apt packages dir for install packages without sudo
RUN chown -R $USER:$USER /usr/local/lib/python3.12/dist-packages
RUN chown -R $USER:$USER /var/cache/apt/archives/
RUN chown -R $USER:$USER /var/lib/dpkg/
### END Change owner of pip and apt packages dir for install packages without sudo


USER $USER


### Install Gazebo
RUN echo "Install Gazebo $GZ_VERSION"
RUN sudo apt-get update && \
    sudo apt-get install -y lsb-release wget gnupg && \
    sudo wget https://packages.osrfoundation.org/gazebo.gpg -O /usr/share/keyrings/pkgs-osrf-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/pkgs-osrf-archive-keyring.gpg] http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/gazebo-stable.list > /dev/null && \
    sudo apt-get update && \
    sudo apt-get install gz-${GZ_VERSION} -y && \
    sudo apt-get autoclean && \
    sudo apt-get autoremove && \
    sudo rm -rf /var/lib/apt/lists/*
### End install Gazebo


### Install FreeCAD Daily
RUN echo 'Install FreeCAD Daily'
RUN sudo add-apt-repository ppa:freecad-maintainers/freecad-daily && \
    sudo apt-get update && \
    sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \
        freecad-daily -y && \
    sudo apt-get autoclean -y && \
    sudo apt-get autoremove -y && \
    sudo rm -rf /var/lib/apt/lists/*
### End Install FreeCAD Daily


# should be after user activation
### Install FreeCAD from conda py3.12
RUN echo 'Install FreeCAD conda py3.12'
ENV CONDA_PLUGINS_AUTO_ACCEPT_TOS=true
RUN mkdir -p /home/$USER/miniconda3 && \
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /home/$USER/miniconda3/miniconda.sh && \
    bash /home/$USER/miniconda3/miniconda.sh -b -u -p /home/$USER/miniconda3 && \
    rm /home/$USER/miniconda3/miniconda.sh && \
    . /home/$USER/miniconda3/bin/activate && \
    conda init --all && \
    conda config --add channels conda-forge && \
    conda create -n freecad_1_0_312 freecad=1.0.0=py312h0c3bf70_4 python=3.12 && \
    conda activate freecad_1_0_312 && \
    conda install numpy pandas matplotlib requests qt6-wayland pycollada && \
    sudo apt-get autoclean -y && \
    sudo apt-get autoremove -y && \
    sudo rm -rf /var/lib/apt/lists/*
### End Install FreeCAD conda py3.12


# # Should be after user activation
# ### Install FreeCAD from conda default
# RUN echo 'Install FreeCAD conda default'
# RUN mkdir -p /home/$USER/miniconda3 && \
#     wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /home/$USER/miniconda3/miniconda.sh && \
#     bash /home/$USER/miniconda3/miniconda.sh -b -u -p /home/$USER/miniconda3 && \
#     rm /home/$USER/miniconda3/miniconda.sh && \
#     . /home/$USER/miniconda3/bin/activate && \
#     conda init --all && \
#     conda install conda-forge::freecad && \
#     conda install conda-forge::qt6-wayland && \
#     conda install conda-forge::pycollada && \
#     apt-get autoclean -y && \
#     apt-get autoremove -y && \
#     rm -rf /var/lib/apt/lists/*
# ### End Install FreeCAD conda default


### Copy project to image
RUN mkdir -p $PATH_TO_WS/src
WORKDIR $PATH_TO_WS/src
RUN mkdir -p ./freecad_cross_rosdep
COPY --link --chown=$USER:$USER ros2_ws/src/freecad_cross_rosdep ./freecad_cross_rosdep
### END copy project to image


### Make path for FreeCAD mods
RUN mkdir -p $HOME/.local/share/FreeCAD/Mod
### END Make path for FreeCAD mods


WORKDIR $PATH_TO_WS


### Install ROS deps
RUN echo 'Install ROS dependencies...'
RUN sudo -H apt-get update -y && rosdep update && \
    sudo PIP_BREAK_SYSTEM_PACKAGES=1 rosdep install -r -q --from-paths `colcon list --packages-up-to freecad_cross_rosdep -p` --ignore-src --rosdistro ${ROS_DISTRO} && \
    sudo apt-get autoclean -y && \
    sudo apt-get autoremove -y && \
    sudo rm -rf /var/lib/apt/lists/*
### End Install ROS deps


### Build ROS packages
RUN echo 'Build ROS packages...'
RUN . /opt/ros/${ROS_DISTRO}/setup.bash && colcon build --symlink-install
RUN echo ". /opt/ros/${ROS_DISTRO}/setup.bash" >> ${HOME}/.profile
RUN echo ". ${PATH_TO_WS}/install/local_setup.bash" >> ${HOME}/.profile
### Build ROS packages


CMD ["bash", "-c", ". ./install/setup.bash && freecad"]
